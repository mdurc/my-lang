Tokens (96):
[IF            ] if                          at (row=1, col=1-3)
[LPAREN        ] (                           at (row=1, col=4-5)
[IDENTIFIER    ] condition                   at (row=1, col=5-14)
[RPAREN        ] )                           at (row=1, col=14-15)
[LBRACE        ] {                           at (row=1, col=16-17)
[RBRACE        ] }                           at (row=2, col=1-2)
[ELSE          ] else                        at (row=2, col=3-7)
[LBRACE        ] {                           at (row=2, col=8-9)
[RBRACE        ] }                           at (row=3, col=1-2)
[FOR           ] for                         at (row=5, col=1-4)
[LPAREN        ] (                           at (row=5, col=5-6)
[MUT           ] mut                         at (row=5, col=6-9)
[IDENTIFIER    ] i                           at (row=5, col=10-11)
[WALRUS        ] :=                          at (row=5, col=12-14)
[INT_LITERAL   ] 0             0             at (row=5, col=15-16)
[SEMICOLON     ] ;                           at (row=5, col=16-17)
[IDENTIFIER    ] i                           at (row=5, col=18-19)
[LANGLE        ] <                           at (row=5, col=20-21)
[INT_LITERAL   ] 10            10            at (row=5, col=22-24)
[SEMICOLON     ] ;                           at (row=5, col=24-25)
[IDENTIFIER    ] i                           at (row=5, col=26-27)
[EQUAL         ] =                           at (row=5, col=28-29)
[IDENTIFIER    ] i                           at (row=5, col=30-31)
[PLUS          ] +                           at (row=5, col=31-32)
[INT_LITERAL   ] 1             1             at (row=5, col=32-33)
[RPAREN        ] )                           at (row=5, col=33-34)
[LBRACE        ] {                           at (row=5, col=35-36)
[IF            ] if                          at (row=6, col=5-7)
[LPAREN        ] (                           at (row=6, col=8-9)
[IDENTIFIER    ] i                           at (row=6, col=9-10)
[BANG_EQUAL    ] !=                          at (row=6, col=11-13)
[INT_LITERAL   ] 5             5             at (row=6, col=14-15)
[RPAREN        ] )                           at (row=6, col=15-16)
[LBRACE        ] {                           at (row=6, col=17-18)
[IDENTIFIER    ] z                           at (row=7, col=9-10)
[WALRUS        ] :=                          at (row=7, col=11-13)
[INT_LITERAL   ] 1             1             at (row=7, col=14-15)
[SEMICOLON     ] ;                           at (row=7, col=15-16)
[CONTINUE      ] continue                    at (row=8, col=9-17)
[SEMICOLON     ] ;                           at (row=8, col=17-18)
[RBRACE        ] }                           at (row=9, col=5-6)
[IDENTIFIER    ] y                           at (row=10, col=5-6)
[WALRUS        ] :=                          at (row=10, col=7-9)
[INT_LITERAL   ] 9             9             at (row=10, col=10-11)
[SEMICOLON     ] ;                           at (row=10, col=11-12)
[BREAK         ] break                       at (row=11, col=5-10)
[SEMICOLON     ] ;                           at (row=11, col=10-11)
[RBRACE        ] }                           at (row=12, col=1-2)
[WHILE         ] while                       at (row=14, col=1-6)
[LPAREN        ] (                           at (row=14, col=7-8)
[INT_LITERAL   ] 1             1             at (row=14, col=8-9)
[RPAREN        ] )                           at (row=14, col=9-10)
[LBRACE        ] {                           at (row=14, col=11-12)
[IDENTIFIER    ] z                           at (row=15, col=3-4)
[WALRUS        ] :=                          at (row=15, col=5-7)
[INT_LITERAL   ] 3             3             at (row=15, col=8-9)
[SEMICOLON     ] ;                           at (row=15, col=9-10)
[IDENTIFIER    ] y                           at (row=16, col=3-4)
[COLON         ] :                           at (row=16, col=5-6)
[I32           ] i32                         at (row=16, col=7-10)
[EQUAL         ] =                           at (row=16, col=11-12)
[IDENTIFIER    ] z                           at (row=16, col=13-14)
[SEMICOLON     ] ;                           at (row=16, col=14-15)
[RBRACE        ] }                           at (row=17, col=1-2)
[MUT           ] mut                         at (row=19, col=1-4)
[IDENTIFIER    ] x                           at (row=19, col=5-6)
[COLON         ] :                           at (row=19, col=7-8)
[I32           ] i32                         at (row=19, col=9-12)
[EQUAL         ] =                           at (row=19, col=13-14)
[INT_LITERAL   ] 5             5             at (row=19, col=15-16)
[SEMICOLON     ] ;                           at (row=19, col=16-17)
[SWITCH        ] switch                      at (row=20, col=1-7)
[LPAREN        ] (                           at (row=20, col=8-9)
[IDENTIFIER    ] x                           at (row=20, col=9-10)
[RPAREN        ] )                           at (row=20, col=10-11)
[LBRACE        ] {                           at (row=20, col=12-13)
[CASE          ] case                        at (row=21, col=5-9)
[INT_LITERAL   ] 3             3             at (row=21, col=10-11)
[COLON         ] :                           at (row=21, col=11-12)
[LBRACE        ] {                           at (row=21, col=13-14)
[IDENTIFIER    ] z                           at (row=22, col=9-10)
[WALRUS        ] :=                          at (row=22, col=11-13)
[INT_LITERAL   ] 2             2             at (row=22, col=14-15)
[SEMICOLON     ] ;                           at (row=22, col=15-16)
[PRINT         ] print                       at (row=23, col=9-14)
[IDENTIFIER    ] x                           at (row=23, col=15-16)
[SEMICOLON     ] ;                           at (row=23, col=16-17)
[RBRACE        ] }                           at (row=24, col=5-6)
[RBRACE        ] }                           at (row=25, col=1-2)
[LBRACE        ] {                           at (row=27, col=1-2)
[MUT           ] mut                         at (row=29, col=5-8)
[IDENTIFIER    ] x                           at (row=29, col=9-10)
[WALRUS        ] :=                          at (row=29, col=11-13)
[INT_LITERAL   ] 3             3             at (row=29, col=14-15)
[SEMICOLON     ] ;                           at (row=29, col=15-16)
[RBRACE        ] }                           at (row=30, col=1-2)
