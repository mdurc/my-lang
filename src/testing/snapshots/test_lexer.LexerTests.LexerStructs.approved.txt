Tokens (65):
[STRUCT        ] struct                      at (row=1, col=1-7)
[IDENTIFIER    ] Point                       at (row=1, col=8-13)
[LBRACE        ] {                           at (row=1, col=14-15)
[IDENTIFIER    ] x                           at (row=2, col=5-6)
[COLON         ] :                           at (row=2, col=6-7)
[I32           ] i32                         at (row=2, col=8-11)
[COMMA         ] ,                           at (row=2, col=11-12)
[IDENTIFIER    ] y                           at (row=3, col=5-6)
[COLON         ] :                           at (row=3, col=6-7)
[I32           ] i32                         at (row=3, col=8-11)
[COMMA         ] ,                           at (row=3, col=11-12)
[FUNC          ] func                        at (row=5, col=5-9)
[IDENTIFIER    ] is_origin                   at (row=5, col=10-19)
[LPAREN        ] (                           at (row=5, col=19-20)
[RPAREN        ] )                           at (row=5, col=20-21)
[RETURNS       ] returns                     at (row=5, col=22-29)
[LPAREN        ] (                           at (row=5, col=30-31)
[IDENTIFIER    ] r                           at (row=5, col=31-32)
[COLON         ] :                           at (row=5, col=32-33)
[U8            ] u8                          at (row=5, col=34-36)
[RPAREN        ] )                           at (row=5, col=36-37)
[LBRACE        ] {                           at (row=5, col=38-39)
[RETURN        ] return                      at (row=6, col=9-15)
[IDENTIFIER    ] x                           at (row=6, col=16-17)
[EQUAL_EQUAL   ] ==                          at (row=6, col=18-20)
[INT_LITERAL   ] 0             0             at (row=6, col=21-22)
[AND           ] and                         at (row=6, col=23-26)
[IDENTIFIER    ] y                           at (row=6, col=27-28)
[EQUAL_EQUAL   ] ==                          at (row=6, col=29-31)
[INT_LITERAL   ] 0             0             at (row=6, col=32-33)
[SEMICOLON     ] ;                           at (row=6, col=33-34)
[RBRACE        ] }                           at (row=7, col=5-6)
[RBRACE        ] }                           at (row=8, col=1-2)
[MUT           ] mut                         at (row=10, col=1-4)
[IDENTIFIER    ] origin                      at (row=10, col=5-11)
[WALRUS        ] :=                          at (row=10, col=12-14)
[IDENTIFIER    ] Point                       at (row=10, col=15-20)
[LPAREN        ] (                           at (row=10, col=20-21)
[IDENTIFIER    ] x                           at (row=10, col=21-22)
[EQUAL         ] =                           at (row=10, col=23-24)
[INT_LITERAL   ] 0             0             at (row=10, col=25-26)
[COMMA         ] ,                           at (row=10, col=26-27)
[IDENTIFIER    ] y                           at (row=10, col=28-29)
[EQUAL         ] =                           at (row=10, col=30-31)
[INT_LITERAL   ] 0             0             at (row=10, col=32-33)
[RPAREN        ] )                           at (row=10, col=33-34)
[SEMICOLON     ] ;                           at (row=10, col=34-35)
[MUT           ] mut                         at (row=12, col=1-4)
[IDENTIFIER    ] x_o                         at (row=12, col=5-8)
[COLON         ] :                           at (row=12, col=9-10)
[I32           ] i32                         at (row=12, col=11-14)
[EQUAL         ] =                           at (row=12, col=15-16)
[IDENTIFIER    ] origin                      at (row=12, col=17-23)
[DOT           ] .                           at (row=12, col=23-24)
[IDENTIFIER    ] x                           at (row=12, col=24-25)
[SEMICOLON     ] ;                           at (row=12, col=25-26)
[MUT           ] mut                         at (row=13, col=1-4)
[IDENTIFIER    ] y_o                         at (row=13, col=5-8)
[COLON         ] :                           at (row=13, col=9-10)
[I32           ] i32                         at (row=13, col=11-14)
[EQUAL         ] =                           at (row=13, col=15-16)
[IDENTIFIER    ] origin                      at (row=13, col=17-23)
[DOT           ] .                           at (row=13, col=23-24)
[IDENTIFIER    ] y                           at (row=13, col=24-25)
[SEMICOLON     ] ;                           at (row=13, col=25-26)
