Tokens (75):
[IF            ] if                          at (row=1, s_col=1, e_col=3)
[LPAREN        ] (                           at (row=1, s_col=4, e_col=5)
[IDENTIFIER    ] condition                   at (row=1, s_col=5, e_col=14)
[RPAREN        ] )                           at (row=1, s_col=14, e_col=15)
[LBRACE        ] {                           at (row=1, s_col=16, e_col=17)
[RBRACE        ] }                           at (row=2, s_col=1, e_col=2)
[ELSE          ] else                        at (row=2, s_col=3, e_col=7)
[LBRACE        ] {                           at (row=2, s_col=8, e_col=9)
[RBRACE        ] }                           at (row=3, s_col=1, e_col=2)
[FOR           ] for                         at (row=5, s_col=1, e_col=4)
[LPAREN        ] (                           at (row=5, s_col=5, e_col=6)
[MUT           ] mut                         at (row=5, s_col=6, e_col=9)
[IDENTIFIER    ] i                           at (row=5, s_col=10, e_col=11)
[WALRUS        ] :=                          at (row=5, s_col=12, e_col=14)
[INT_LITERAL   ] 0             0             at (row=5, s_col=15, e_col=16)
[SEMICOLON     ] ;                           at (row=5, s_col=16, e_col=17)
[IDENTIFIER    ] i                           at (row=5, s_col=18, e_col=19)
[LANGLE        ] <                           at (row=5, s_col=20, e_col=21)
[INT_LITERAL   ] 10            10            at (row=5, s_col=22, e_col=24)
[SEMICOLON     ] ;                           at (row=5, s_col=24, e_col=25)
[IDENTIFIER    ] i                           at (row=5, s_col=26, e_col=27)
[EQUAL         ] =                           at (row=5, s_col=28, e_col=29)
[IDENTIFIER    ] i                           at (row=5, s_col=30, e_col=31)
[PLUS          ] +                           at (row=5, s_col=31, e_col=32)
[INT_LITERAL   ] 1             1             at (row=5, s_col=32, e_col=33)
[RPAREN        ] )                           at (row=5, s_col=33, e_col=34)
[LBRACE        ] {                           at (row=5, s_col=35, e_col=36)
[IF            ] if                          at (row=6, s_col=5, e_col=7)
[LPAREN        ] (                           at (row=6, s_col=8, e_col=9)
[IDENTIFIER    ] i                           at (row=6, s_col=9, e_col=10)
[BANG_EQUAL    ] !=                          at (row=6, s_col=11, e_col=13)
[INT_LITERAL   ] 5             5             at (row=6, s_col=14, e_col=15)
[RPAREN        ] )                           at (row=6, s_col=15, e_col=16)
[LBRACE        ] {                           at (row=6, s_col=17, e_col=18)
[CONTINUE      ] continue                    at (row=7, s_col=9, e_col=17)
[SEMICOLON     ] ;                           at (row=7, s_col=17, e_col=18)
[RBRACE        ] }                           at (row=8, s_col=5, e_col=6)
[BREAK         ] break                       at (row=9, s_col=5, e_col=10)
[SEMICOLON     ] ;                           at (row=9, s_col=10, e_col=11)
[RBRACE        ] }                           at (row=10, s_col=1, e_col=2)
[WHILE         ] while                       at (row=12, s_col=1, e_col=6)
[LPAREN        ] (                           at (row=12, s_col=7, e_col=8)
[INT_LITERAL   ] 1             1             at (row=12, s_col=8, e_col=9)
[RPAREN        ] )                           at (row=12, s_col=9, e_col=10)
[LBRACE        ] {                           at (row=12, s_col=11, e_col=12)
[RBRACE        ] }                           at (row=13, s_col=1, e_col=2)
[MUT           ] mut                         at (row=15, s_col=1, e_col=4)
[IDENTIFIER    ] x                           at (row=15, s_col=5, e_col=6)
[COLON         ] :                           at (row=15, s_col=7, e_col=8)
[I32           ] i32                         at (row=15, s_col=9, e_col=12)
[EQUAL         ] =                           at (row=15, s_col=13, e_col=14)
[INT_LITERAL   ] 5             5             at (row=15, s_col=15, e_col=16)
[SEMICOLON     ] ;                           at (row=15, s_col=16, e_col=17)
[SWITCH        ] switch                      at (row=16, s_col=1, e_col=7)
[LPAREN        ] (                           at (row=16, s_col=8, e_col=9)
[IDENTIFIER    ] x                           at (row=16, s_col=9, e_col=10)
[RPAREN        ] )                           at (row=16, s_col=10, e_col=11)
[LBRACE        ] {                           at (row=16, s_col=12, e_col=13)
[CASE          ] case                        at (row=17, s_col=5, e_col=9)
[INT_LITERAL   ] 3             3             at (row=17, s_col=10, e_col=11)
[COLON         ] :                           at (row=17, s_col=11, e_col=12)
[LBRACE        ] {                           at (row=17, s_col=13, e_col=14)
[PRINT         ] print                       at (row=18, s_col=9, e_col=14)
[IDENTIFIER    ] x                           at (row=18, s_col=15, e_col=16)
[SEMICOLON     ] ;                           at (row=18, s_col=16, e_col=17)
[RBRACE        ] }                           at (row=19, s_col=5, e_col=6)
[RBRACE        ] }                           at (row=20, s_col=1, e_col=2)
[LBRACE        ] {                           at (row=22, s_col=1, e_col=2)
[MUT           ] mut                         at (row=24, s_col=5, e_col=8)
[IDENTIFIER    ] x                           at (row=24, s_col=9, e_col=10)
[WALRUS        ] :=                          at (row=24, s_col=11, e_col=13)
[INT_LITERAL   ] 3             3             at (row=24, s_col=14, e_col=15)
[SEMICOLON     ] ;                           at (row=24, s_col=15, e_col=16)
[RBRACE        ] }                           at (row=25, s_col=1, e_col=2)
[EOF_          ]                             at (row=26, s_col=1, e_col=1)
