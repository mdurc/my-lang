Tokens (102):
[FUNC          ] func                        at (row=1, col=1-5)
[IDENTIFIER    ] foo                         at (row=1, col=6-9)
[LPAREN        ] (                           at (row=1, col=10-11)
[RPAREN        ] )                           at (row=1, col=11-12)
[RETURNS       ] returns                     at (row=1, col=13-20)
[LPAREN        ] (                           at (row=1, col=21-22)
[IDENTIFIER    ] z                           at (row=1, col=22-23)
[COLON         ] :                           at (row=1, col=23-24)
[I32           ] i32                         at (row=1, col=25-28)
[RPAREN        ] )                           at (row=1, col=28-29)
[LBRACE        ] {                           at (row=1, col=30-31)
[IDENTIFIER    ] z                           at (row=4, col=3-4)
[EQUAL         ] =                           at (row=4, col=5-6)
[INT_LITERAL   ] 18            18            at (row=4, col=7-9)
[SEMICOLON     ] ;                           at (row=4, col=9-10)
[RBRACE        ] }                           at (row=5, col=1-2)
[FUNC          ] func                        at (row=6, col=1-5)
[IDENTIFIER    ] bar                         at (row=6, col=6-9)
[LPAREN        ] (                           at (row=6, col=10-11)
[RPAREN        ] )                           at (row=6, col=11-12)
[RETURNS       ] returns                     at (row=6, col=13-20)
[LPAREN        ] (                           at (row=6, col=21-22)
[IDENTIFIER    ] z                           at (row=6, col=22-23)
[COLON         ] :                           at (row=6, col=23-24)
[I32           ] i32                         at (row=6, col=25-28)
[RPAREN        ] )                           at (row=6, col=28-29)
[LBRACE        ] {                           at (row=6, col=30-31)
[RETURN        ] return                      at (row=7, col=3-9)
[INT_LITERAL   ] 5             5             at (row=7, col=10-11)
[SEMICOLON     ] ;                           at (row=7, col=11-12)
[RBRACE        ] }                           at (row=8, col=1-2)
[FUNC          ] func                        at (row=10, col=1-5)
[IDENTIFIER    ] foo_2                       at (row=10, col=6-11)
[LPAREN        ] (                           at (row=10, col=11-12)
[MUT           ] mut                         at (row=10, col=12-15)
[IDENTIFIER    ] x                           at (row=10, col=16-17)
[COLON         ] :                           at (row=10, col=17-18)
[I32           ] i32                         at (row=10, col=19-22)
[COMMA         ] ,                           at (row=10, col=22-23)
[IMM           ] imm                         at (row=10, col=24-27)
[IDENTIFIER    ] y                           at (row=10, col=28-29)
[COLON         ] :                           at (row=10, col=29-30)
[I32           ] i32                         at (row=10, col=31-34)
[COMMA         ] ,                           at (row=10, col=34-35)
[TAKE          ] take                        at (row=10, col=36-40)
[IDENTIFIER    ] z                           at (row=10, col=41-42)
[COLON         ] :                           at (row=10, col=42-43)
[I32           ] i32                         at (row=10, col=44-47)
[RPAREN        ] )                           at (row=10, col=47-48)
[LBRACE        ] {                           at (row=10, col=49-50)
[PRINT         ] print                       at (row=11, col=3-8)
[STRING_LITERAL] "hi"          hi            at (row=11, col=9-13)
[SEMICOLON     ] ;                           at (row=11, col=13-14)
[RBRACE        ] }                           at (row=13, col=1-2)
[IDENTIFIER    ] x                           at (row=16, col=1-2)
[COLON         ] :                           at (row=16, col=3-4)
[FUNC          ] func                        at (row=16, col=5-9)
[LPAREN        ] (                           at (row=16, col=9-10)
[I32           ] i32                         at (row=16, col=10-13)
[COMMA         ] ,                           at (row=16, col=13-14)
[I32           ] i32                         at (row=16, col=15-18)
[COMMA         ] ,                           at (row=16, col=18-19)
[I32           ] i32                         at (row=16, col=20-23)
[RPAREN        ] )                           at (row=16, col=23-24)
[ARROW         ] ->                          at (row=16, col=24-26)
[U0            ] u0                          at (row=16, col=26-28)
[EQUAL         ] =                           at (row=16, col=29-30)
[IDENTIFIER    ] foo_2                       at (row=16, col=31-36)
[SEMICOLON     ] ;                           at (row=16, col=36-37)
[IDENTIFIER    ] z                           at (row=18, col=1-2)
[WALRUS        ] :=                          at (row=18, col=3-5)
[INT_LITERAL   ] 10            10            at (row=18, col=6-8)
[SEMICOLON     ] ;                           at (row=18, col=8-9)
[MUT           ] mut                         at (row=20, col=1-4)
[IDENTIFIER    ] a                           at (row=20, col=5-6)
[WALRUS        ] :=                          at (row=20, col=7-9)
[INT_LITERAL   ] 1             1             at (row=20, col=10-11)
[SEMICOLON     ] ;                           at (row=20, col=11-12)
[MUT           ] mut                         at (row=21, col=1-4)
[IDENTIFIER    ] b                           at (row=21, col=5-6)
[WALRUS        ] :=                          at (row=21, col=7-9)
[INT_LITERAL   ] 2             2             at (row=21, col=10-11)
[SEMICOLON     ] ;                           at (row=21, col=11-12)
[IDENTIFIER    ] x                           at (row=22, col=1-2)
[LPAREN        ] (                           at (row=22, col=2-3)
[IDENTIFIER    ] a                           at (row=22, col=3-4)
[COMMA         ] ,                           at (row=22, col=4-5)
[INT_LITERAL   ] 2             2             at (row=22, col=6-7)
[COMMA         ] ,                           at (row=22, col=7-8)
[IDENTIFIER    ] z                           at (row=22, col=9-10)
[RPAREN        ] )                           at (row=22, col=10-11)
[SEMICOLON     ] ;                           at (row=22, col=11-12)
[IDENTIFIER    ] x                           at (row=24, col=1-2)
[LPAREN        ] (                           at (row=24, col=2-3)
[IDENTIFIER    ] b                           at (row=24, col=3-4)
[COMMA         ] ,                           at (row=24, col=4-5)
[INT_LITERAL   ] 2             2             at (row=24, col=6-7)
[COMMA         ] ,                           at (row=24, col=7-8)
[GIVE          ] give                        at (row=24, col=9-13)
[IDENTIFIER    ] z                           at (row=24, col=14-15)
[RPAREN        ] )                           at (row=24, col=15-16)
[SEMICOLON     ] ;                           at (row=24, col=16-17)
