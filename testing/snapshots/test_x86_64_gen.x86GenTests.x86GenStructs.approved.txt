extern exit, string_length, print_string, print_char
extern print_newline, print_uint, print_int
extern read_char, read_word, parse_uint
extern parse_int, string_equals, string_copy
extern memcpy, malloc, free, clrscr, string_concat

default rel
global _start
section .text
_start:
	push rbp
	mov rbp, rsp
	sub rsp, 64
	push rbx ; saving callee-saved register
	push r12 ; saving callee-saved register
	push r13 ; saving callee-saved register
	push r14 ; saving callee-saved register
	push r15 ; saving callee-saved register
	mov rdi, 16
	call malloc
	mov r10, rax
	mov r11, 0
	mov r12, r10
	add r12, 0
	mov QWORD[r12], r11 ; performing store
	mov r13, 0
	mov r14, r10
	add r14, 8
	mov QWORD[r14], r13 ; performing store
	mov QWORD[global_vars + 0], r10
	lea r15, [global_vars + 0]
	mov rbx, QWORD[r15] ; performing load
	mov QWORD[rbp - 8], r10 ; spilling register r10 to stack
	mov r10, rbx
	add r10, 0
	mov QWORD[rbp - 16], r11 ; spilling register r11 to stack
	mov r11, QWORD[r10] ; performing load
	mov QWORD[global_vars + 8], r11
	mov QWORD[rbp - 24], r12 ; spilling register r12 to stack
	lea r12, [global_vars + 0]
	mov QWORD[rbp - 32], r13 ; spilling register r13 to stack
	mov r13, QWORD[r12] ; performing load
	mov QWORD[rbp - 40], r14 ; spilling register r14 to stack
	mov r14, r13
	add r14, 8
	mov QWORD[rbp - 48], r15 ; spilling register r15 to stack
	mov r15, QWORD[r14] ; performing load
	mov QWORD[global_vars + 16], r15
	push r10 ; saving caller-saved register r10
	push r11 ; saving caller-saved register r11
	mov rdi, 0
	call malloc
	pop r11 ; restoring caller-saved register
	pop r10 ; restoring caller-saved register
	mov QWORD[rbp - 56], rbx ; spilling register rbx to stack
	mov rbx, rax
	mov QWORD[global_vars + 24], rbx
	push r10 ; saving caller-saved register r10
	push r11 ; saving caller-saved register r11
	mov rdi, 0
	call malloc
	pop r11 ; restoring caller-saved register
	pop r10 ; restoring caller-saved register
	mov QWORD[rbp - 64], r10 ; spilling register r10 to stack
	mov r10, rax
	push r10 ; saving caller-saved register r10
	push r11 ; saving caller-saved register r11
	mov rdi, r10 ; memcpy dst
	mov rsi, QWORD[global_vars + 24] ; memcpy src
	mov rcx, 0 ; memcpy size
	call memcpy
	pop r11 ; restoring caller-saved register
	pop r10 ; restoring caller-saved register
	mov QWORD[global_vars + 32], r10
	push r10 ; saving caller-saved register r10
	push r11 ; saving caller-saved register r11
	mov rdi, QWORD[global_vars + 0]
	call free
	pop r11 ; restoring caller-saved register
	pop r10 ; restoring caller-saved register
	mov QWORD[global_vars + 0], 0 ; clear ptr to null after free
	push r10 ; saving caller-saved register r10
	push r11 ; saving caller-saved register r11
	mov rdi, QWORD[global_vars + 24]
	call free
	pop r11 ; restoring caller-saved register
	pop r10 ; restoring caller-saved register
	mov QWORD[global_vars + 24], 0 ; clear ptr to null after free
	push r10 ; saving caller-saved register r10
	push r11 ; saving caller-saved register r11
	mov rdi, QWORD[global_vars + 32]
	call free
	pop r11 ; restoring caller-saved register
	pop r10 ; restoring caller-saved register
	mov QWORD[global_vars + 32], 0 ; clear ptr to null after free
	pop r15 ; restoring callee-saved register
	pop r14 ; restoring callee-saved register
	pop r13 ; restoring callee-saved register
	pop r12 ; restoring callee-saved register
	pop rbx ; restoring callee-saved register
	mov rsp, rbp ; restore stack
	pop rbp
	xor rdi, rdi
	call exit

section .data
section .bss
	global_vars resb 48
